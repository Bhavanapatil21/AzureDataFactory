{
	"name": "SCD2CompleteDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_DL",
						"type": "DatasetReference"
					},
					"name": "Textsource1"
				},
				{
					"dataset": {
						"referenceName": "DS_DB",
						"type": "DatasetReference"
					},
					"name": "DBTBLE"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_DB",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_DB",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "join1"
				},
				{
					"name": "filtrRemoveNulltextfile"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          { id} as short,",
				"          name as string,",
				"          City as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Textsource1",
				"source(output(",
				"          id as integer,",
				"          name as string,",
				"          City as string,",
				"          active_flag as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DBTBLE",
				"DBTBLE select(mapColumn(",
				"          db_id = id,",
				"          db_name = name,",
				"          db_City = City,",
				"          db_active_flag = active_flag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, Textsource1 join(db_id == { id},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 filter(!isNull({ id})) ~> filtrRemoveNulltextfile",
				"filtrRemoveNulltextfile select(mapColumn(",
				"          id = { id}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive(active_flag = 0) ~> derivedColumn1",
				"derivedColumn1 alterRow(updateIf(1==1)) ~> alterRow1",
				"Textsource1 derive(active_flag = 1) ~> derivedColumn2",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          id as integer,",
				"          name as string,",
				"          City as string,",
				"          active_flag as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['id'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as integer,",
				"          name as string,",
				"          City as string,",
				"          active_flag as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id = { id},",
				"          name,",
				"          City,",
				"          active_flag",
				"     )) ~> sink2"
			]
		}
	}
}